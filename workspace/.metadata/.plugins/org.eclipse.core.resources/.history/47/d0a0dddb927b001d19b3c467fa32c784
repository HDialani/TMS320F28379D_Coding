/*****************************************************************************************************************
 * @Source:  https://mevihub.com/how-to-interface-spi-communication-using-tms320/
 * @Brief:   TMS320F28379D
 * @Author:  Hitesh Dialani
 * @Date:    Dec-12-2022
 * @Version: 1.0
 *****************************************************************************************************************
 *@Details: This program implements SPI loop back, no jumper is needed. Only SPIA is used sData is the MISO value.
            Measure with logic analyzer GPIO 58-62. Press ctrl+ left click to see what a function does
 *****************************************************************************************************************
 */


#include "F28x_Project.h"
#include "F2837xD_device.h"

#include "device.h"
#include "driverlib.h"

void SPI_GPIO_Init();
void spi_init();
void spi_TX(Uint16 a);

uint16_t sData =0xaa;
void main(void)
{
    Device_init();
    Device_initGPIO();

    DINT;
    SPI_GPIO_Init();
    spi_init();

    for(;;)
    {
        spi_TX(sData);
        DEVICE_DELAY_US(100000);
    }
}

void SPI_GPIO_Init()
{

          EALLOW;
          GPIO_setPinConfig(GPIO_58_SPISIMOA);
          GPIO_setPinConfig(GPIO_59_SPISOMIA);
          GPIO_setPinConfig(GPIO_60_SPICLKA);
          GPIO_setPinConfig(GPIO_61_SPISTEA);
          EDIS;
}

void spi_init()
{
          SPI_disableModule(SPIA_BASE);
          SPI_setConfig(SPIA_BASE, DEVICE_LSPCLK_FREQ, SPI_PROT_POL0PHA1,
                        SPI_MODE_MASTER, 500000,     16);
          SPI_disableFIFO(SPIA_BASE);
          SPI_enableLoopback(SPIA_BASE);
          SPI_setEmulationMode(SPIA_BASE, SPI_EMULATION_STOP_MIDWAY);
          SPI_enableModule(SPIA_BASE);
}
//
// spi_xmit - Transmit value via SPI
//
void spi_TX(Uint16 a)
{
    SpiaRegs.SPITXBUF = a;
}
